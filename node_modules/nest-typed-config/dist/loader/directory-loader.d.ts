import type { OptionsSync } from 'cosmiconfig';
export interface DirectoryLoaderOptions extends OptionsSync {
    /**
     * The directory containing all configuration files.
     */
    directory: string;
    /**
     * File regex to include.
     */
    include?: RegExp;
    /**
     * If "true", ignore environment variable substitution.
     * Default: true
     */
    ignoreEnvironmentVariableSubstitution?: boolean;
}
/**
 * Directory loader loads configuration in a specific folder.
 * The basename of file will be used as configuration key, for the directory below:
 *
 * ```
 * .
 * └─config
 *    ├── app.toml
 *    └── db.toml
 * ```
 *
 * The parsed config will be `{ app: "config in app.toml", db: "config in db.toml" }`
 * @param options directory loader options.
 */
export declare const directoryLoader: ({ directory, ...options }: DirectoryLoaderOptions) => () => Record<string, any>;
